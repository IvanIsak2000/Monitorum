package utils

import (
	"fmt"
	"github.com/mymmrac/telego"
	"time"
)


var ProtectionChats map[int64]bool

func init() {
	// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π ProtectionChats
	ProtectionChats = make(map[int64]bool)
}


func AddChat(bot *telego.Bot, update *telego.Update) {
	ProtectionChats[update.Message.Chat.ID] = true
	notif_msg, _ := bot.SendMessage(
		&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: "üö® –í–ö–õ–Æ–ß–ï–ù –ê–ù–¢–ò–†–ï–ô–î –†–ï–ñ–ò–ú üö®\n–í–°–ï –°–û–û–ë–©–ï–ù–ò–Ø –í –¢–ï–ß–ï–ù–ò–ò 60 –°–ï–ö–£–ù–î –ë–£–î–£–¢ –£–î–ê–õ–Ø–¢–¨–°–Ø"})
	fmt.Printf("–ß–∞—Ç %v –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∑–∞—â–∏—Ç—É\n", update.Message.Chat.ID)
	go func() {
		time.Sleep(60 * time.Second)
		DeleteChat(bot, update, notif_msg)
	}()
}

func DeleteChat(bot *telego.Bot, update *telego.Update, notif_msg *telego.Message) {
	if _, exists := ProtectionChats[update.Message.Chat.ID]; exists{
		delete(ProtectionChats, update.Message.Chat.ID)

		// –£–¥–∞–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–∏
		bot.DeleteMessage(&telego.DeleteMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			MessageID: notif_msg.MessageID})
			
		// –û—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —É—Å–ø–µ—à–Ω–æ–º —Å–Ω—è—Ç–∏–∏ –∞–Ω—Ç–∏—Ä–µ–∂–∏–º–∞
		bot.SendMessage(
			&telego.SendMessageParams{
				ChatID: update.Message.Chat.ChatID(),
				Text: "‚úÖ –ê–Ω—Ç–∏—Ä–µ–π–¥ —Ä–µ–∂–∏–º –æ—Ç–∫–ª—é—á–µ–Ω.\n–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ —Å–≤–æ–±–æ–¥–Ω–æ –ø–∏—Å–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è."})
		fmt.Printf("–ß–∞—Ç %v —É–¥–∞–ª—ë–Ω –∏–∑ —Å–ø–∏—Å–∫–∞ –∑–∞—â–∏—Ç—ã\n", update.Message.Chat.ID)
	} else {
		fmt.Printf("–ß–∞—Ç %v –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∑–∞—â–∏—Ç—ã\n", update.Message.Chat.ID)
	}
}

func IsProtect(chatID int64) bool {
	return ProtectionChats[chatID]
}

