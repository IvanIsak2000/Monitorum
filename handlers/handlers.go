package handlers

import (
	"fmt"
	"log"
	"monitorum/utils"
	"github.com/mymmrac/telego"
)

func Start(bot *telego.Bot, message *telego.Message) {
	if message.Chat.Type == "private"{
		msg := `
ü§ö –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é
–Ø –±–æ—Ç –¥–ª—è –∑–∞—â–∏—Ç—ã —á–∞—Ç–∞.

‚ö° –ú–æ–≥—É:
- —É–¥–∞–ª—è—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è(–≤—Ö–æ–¥/–≤—ã—Ö–æ–¥ —é–∑–µ—Ä–∞)
- –±–∞–Ω–∏—Ç—å –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π –ø–æ—Ä—è–¥–∫–∞
- –≤–∫–ª—é—á–∞—Ç—å –ê–Ω—Ç–∏–†–µ–π–¥ —Ä–µ–∂–∏–º
- —Ä–µ–ø–æ—Ä—Ç–∏—Ç—å –∞–¥–º–∏–Ω—É –æ –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ

‚ö†Ô∏è –î–ª—è —Ä–∞–±–æ—Ç—ã –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤—å—Ç–µ
–º–µ–Ω—è –≤ —á–∞—Ç —Å –ø—Ä–∞–≤–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.
`		
		param := telego.SendMessageParams{
			ChatID: message.Chat.ChatID(),
			Text: msg,
		}
		bot.SendMessage(&param)

	} else {
		msg := `
ü§ù –°–ø–∞—Å–∏–±–æ, —è –¥–æ–±–∞–≤–ª–µ–Ω –≤ —á–∞—Ç.

‚ö° –ú–æ–≥—É:
- —É–¥–∞–ª—è—Ç—å —Å–∏—Å—Ç–µ–º–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è(–≤—Ö–æ–¥/–≤—ã—Ö–æ–¥ —é–∑–µ—Ä–∞)
- –±–∞–Ω–∏—Ç—å –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ–π –ø–æ—Ä—è–¥–∫–∞
- –≤–∫–ª—é—á–∞—Ç—å –ê–Ω—Ç–∏–†–µ–π–¥ —Ä–µ–∂–∏–º
- —Ä–µ–ø–æ—Ä—Ç–∏—Ç—å –∞–¥–º–∏–Ω—É –æ –Ω–∞—Ä—É—à–∏—Ç–µ–ª–µ

‚ö†Ô∏è –î–ª—è —Ä–∞–±–æ—Ç—ã —è –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å
–ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞. –ï—Å–ª–∏
–æ–Ω–∏ –≤—ã–¥–∞–Ω—ã - –ø—Ä–æ—Å—Ç–æ –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ 
—ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ.

‚öôÔ∏è –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –∫–æ–º–∞–Ω–¥—ã - !help
`
		param := telego.SendMessageParams{
			ChatID: message.Chat.ChatID(),
			Text: msg,
		}
		_, err := bot.SendMessage(&param)
		if err != nil{
			log.Fatal(err)
		}
	}
}

func Help(bot *telego.Bot, message *telego.Message) {
	if message.Chat.Type == "private"{
		msg := `
‚ö†Ô∏è –ö–æ–º–∞–Ω–¥—ã, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å "!" –¥–æ—Å—Ç—É–ø–Ω—ã
—Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–∞—Ö.

–í —á–∞—Ç–µ –∫–æ–º–∞–Ω–¥–∞ –¥–æ–ª–∂–Ω–∞ –Ω–∞—á–∏–Ω–∞—Ç—å—Å—è —Å "!".
–ù–∞–ø—Ä–∏–º–µ—Ä, !ban
`
		param := telego.SendMessageParams{
			ChatID: message.Chat.ChatID(),
			Text: msg,
		}
		_, err := bot.SendMessage(&param)
		if err != nil{
			fmt.Println(err)}
	} else {
		msg := `
‚öôÔ∏è –î–æ—Å—Ç—É–ø–Ω—ã–µ:
<code>!start</code> –∏–ª–∏ /start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞.

<code>!status</code> - –ü—Ä–æ—Å–º–æ—Ç—Ä —Å—Ç–∞—Ç—É—Å–∞ –¥–æ—Å—Ç—É–ø–∞.

<code>!ban</code> - –õ–∏–∫–≤–∏–¥–∞—Ü–∏—è —é–∑–µ—Ä–∞. –ü—Ä–∏–º–µ–Ω—è—Ç—å —Ç–æ–ª—å–∫–æ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ(reply)
–î–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∞–º –∏ –µ—Å–ª–∏ —è –∏–º–µ—é –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∞.

<code>!report</code> - –í—ã–∑–≤–∞—Ç—å –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞. –ü–æ–º–æ–∂–µ—Ç –∞–¥–º–∏–Ω—É –∑–∞–º–µ—Ç–∏—Ç—å –Ω–∞—Ä—É—à–∏—Ç–µ–ª—è.

<code>!protect</code> - –í–∫–ª—é—á–∏—Ç—å –∞–Ω—Ç–∏—Ä–µ–π–¥ —Ä–µ–∂–∏–º. –£–¥–∞–ª—è–µ—Ç –≤—Å–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
–∑–∞ —Å–ª–µ–¥—É—é—â–∏–µ 60 —Å–µ–∫—É–Ω–¥.

<code>!help</code> - –í—ã–∑–≤–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é.
		`
				param := telego.SendMessageParams{
					ChatID: message.Chat.ChatID(),
					Text: msg,
					ParseMode: telego.ModeHTML}
				_, err := bot.SendMessage(&param)
				if err != nil{
					fmt.Println(err)}}
	
}


func Ban(bot *telego.Bot, update *telego.Update) {
	// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —á–∞—Ç —ç—Ç–æ –≥—Ä—É–ø–ø—É –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞
	if update.Message.Chat.Type != "group" && update.Message.Chat.Type != "supergroup"{
		bot.SendMessage(&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: "‚ùå –ö–æ–º–∞–Ω–¥—É /ban –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ"})
		return
	}

	me, _ := bot.GetMe()
	if !utils.BotIsAdmin(bot, me.ID, update.Message.Chat.ID){
		bot.SendMessage(&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: "‚ùå –£ –º–µ–Ω—è –Ω–µ—Ç –ø—Ä–∞–≤. –î–∞–π—Ç–µ –º–Ω–µ –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"})
		return

	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ 
	target := update.Message.ReplyToMessage
	if target == nil{
		bot.SendMessage(&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: "‚ùå –î–ª—è –ª–∏–∫–≤–∏–¥–∞—Ü–∏–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å !ban"})
		return
	}
	if target.From.ID == update.Message.From.ID{
		bot.SendMessage(&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: "‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞–±–∞–Ω–∏—Ç—å —Å–µ–±—è"})
		return
	}
	
	// –ü–æ–ª—É—á–µ–Ω–∏–µ –±–æ—Ç–∞
	if target.From.ID == me.ID{
		bot.SendMessage(
			&telego.SendMessageParams{
				ChatID: update.Message.Chat.ChatID(),
				Text: "‚ùå –Ø –Ω–µ –º–æ–≥—É –∑–∞–±–∞–Ω–∏—Ç—å —Å–µ–±—è"})
		return 
	}

	// –°–∞–º –±–∞–Ω
	err := bot.BanChatMember(
		&telego.BanChatMemberParams{
			ChatID: update.Message.Chat.ChatID(),
			UserID: target.From.ID,
			RevokeMessages: true})
	if err != nil {
		bot.SendMessage(
			&telego.SendMessageParams{
				ChatID: update.Message.Chat.ChatID(),
			Text: "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"})
	} else {
		text := fmt.Sprintf("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å %v —É—Å–ø–µ—à–Ω–æ –ª–∏–∫–≤–∏–¥–∏—Ä–æ–≤–∞–Ω", target.From.ID)
		bot.SendMessage(&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: text})
	}
}


func Protect(bot *telego.Bot, update *telego.Update) {
	if update.Message.Chat.Type != "group" && update.Message.Chat.Type != "supergroup"{
		bot.SendMessage(&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: "‚ùå –ö–æ–º–∞–Ω–¥—É !protect –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ"})
		return
	}
	utils.AddChat(bot, update)

}

func YouAreNotAdmin(bot *telego.Bot, update *telego.Update) {
	bot.SendMessage(&telego.SendMessageParams{
		ChatID: update.Message.Chat.ChatID(),
		Text: "‚ùå –≠—Ç—É –∫–æ–º–∞–Ω–¥—É –º–æ–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω"})
}

func Report(bot *telego.Bot, update *telego.Update) {
	if update.Message.Chat.Type != "group" && update.Message.Chat.Type != "supergroup"{
		bot.SendMessage(&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: "‚ùå –ö–æ–º–∞–Ω–¥—É !report –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ"})
		return
	}

	// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ 
	target := update.Message.ReplyToMessage
	me, _ := bot.GetMe()
	if target == nil{
		bot.SendMessage(&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: "‚ùå –î–ª—è —Ä–µ–ø–æ—Ä—Ç–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å !report"})
		return
	}
	if target.From.ID == update.Message.From.ID{
		bot.SendMessage(&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: "‚ùå –í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∑–∞—Ä–µ–ø–æ—Ä—Ç–∏—Ç—å —Å–µ–±—è"})
		return
	}
	
	// –ü–æ–ª—É—á–µ–Ω–∏–µ –±–æ—Ç–∞
	if target.From.ID == me.ID{
		bot.SendMessage(
			&telego.SendMessageParams{
				ChatID: update.Message.Chat.ChatID(),
				Text: "‚ùå –Ø –Ω–µ –º–æ–≥—É –∑–∞—Ä–µ–ø–æ—Ä—Ç–∏—Ç—å —Å–µ–±—è"})
		return 
	}

	config, _ := utils.GetConfig()
	text := fmt.Sprintf(`
üÜò –†–µ–ø–æ—Ä—Ç –∏–∑ —á–∞—Ç–∞ <b>%v</b>:
–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å <code>%v</code> –ø–æ–∂–∞–ª–æ–≤–∞–ª—Å—è –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è <code>%v</code>
–∏–∑-–∑–∞:
<blockquote>%s</blockquote>`, 
	update.Message.Chat.Title, 
	update.Message.From.ID,
	target.From.ID,
	update.Message.Text,
)
	bot.SendMessage(&telego.SendMessageParams{
		ChatID: config.ModerId, // TODO: –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∞ —á–∞—Ç–∞
		Text: text,
		ParseMode: telego.ModeHTML,
	})
	bot.SendMessage(&telego.SendMessageParams{
		ChatID: update.Message.Chat.ChatID(),
		Text: "‚úÖ –ê–¥–º–∏–Ω –ø–æ–ª—É—á–∏–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ",
	})


}

func Status(bot *telego.Bot, update *telego.Update) {
	if update.Message.Chat.Type != "group" && update.Message.Chat.Type != "supergroup"{
		bot.SendMessage(&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: "‚ùå –ö–æ–º–∞–Ω–¥—É !status –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ –∏–ª–∏ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ"})
		return
	}

	me, _ := bot.GetMe()
	if utils.BotIsAdmin(bot, me.ID, update.Message.Chat.ID){
		text := "‚úÖ –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –≤—ã–¥–∞–Ω—ã. –ù–∏—á–µ–≥–æ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–≥–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è."
		bot.SendMessage(&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: text,
		})

	} else {
		text := "‚ùå –ü—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–µ –≤—ã–¥–∞–Ω—ã. –ß–∞—Ç –Ω–µ –∑–∞—â–∏—â—ë–Ω."

		bot.SendMessage(&telego.SendMessageParams{
			ChatID: update.Message.Chat.ChatID(),
			Text: text,
		})
	}
}